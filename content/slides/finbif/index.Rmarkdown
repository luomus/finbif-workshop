---
title: Using the FinBIF R package
slides:
  theme: black
  highlight_style: atom-one-dark-reasonable
---

```{r setup, include = FALSE}
library(knitr)
library(finbif)

output_hook  <- knit_hooks$get("output")
error_hook   <- knit_hooks$get("error")
warning_hook <- knit_hooks$get("warning")
plot_hook    <- knit_hooks$get("plot")

knit_hooks$set(
  frag = function(before, options, envir)
    if (before) "<div class = 'fragment'>" else "</div>",
  output = function (x, options)
    paste(
      "</div>\n<div class = 'fragment output'>",
      output_hook(x, options)
    ),
  error = function (x, options)
    paste(
      "</div>\n<div class = 'fragment output'>",
      error_hook(x, options)
    ),
  warning = function (x, options)
    paste(
      "</div>\n<div class = 'fragment output'>",
      warning_hook(x, options)
    ),
  plot = function (x, options)
    paste(
      "</div>\n<div class = 'fragment output'>",
      plot_hook(x, options)
    )
)

opts_chunk$set(
  echo          = TRUE,
  comment       = "#>",
  class.output  = "language-r",
  class.error   = "language-r",
  class.warning = "language-r",
  frag          = TRUE,
  fig.show      = "hide",
  fig.keep      = "none"
)

opts_knit$set(global.device = TRUE)

options(finbif_tz = "Europe/Helsinki")
```

# Using the FinBIF R package

---

## Installation

---

### Stable version
```{r install-cran, eval = FALSE}
install.packages("finbif")
```

---

### Development version
```{r install-github, eval = FALSE}
if (require(remotes)) install.packages("remotes")
remotes::install_github("luomus/finbif@dev")
```

---

### Previous versions
```{r install-version, eval = FALSE}
remotes::install_version("finbif", "0.2.0")
```

---

### Loading the package
```{r library}
library(finbif)
```

---

## Access token

---

### Requesting a token
```{r request-token, eval = FALSE}
finbif_request_token("your@email.com")
```

---

### Setting the token
```{r set-token, eval = FALSE}
Sys.setenv(
  FINBIF_ACCESS_TOKEN = "xtmSOIxjPwq0pOMB1WvcZgFLU9QBkl"
)
```

```{r set-token-renviron, eval = FALSE}
cat(
  'FINBIF_ACCESS_TOKEN = "xtmSOIxjPwq0pOMB1WvcZgFLU9QBkl"',
  file = "~/.Renviron",
  append = TRUE,
  fill = TRUE
)
```

---

## Documentation

---

### Documentation in R
```{r help1, eval = FALSE}
?finbif_request_token
```
```{r help2, eval = FALSE}
help("finbif_request_token")
```
{{% fragment %}} Some important help files {{% /fragment %}}
```{r help0-files, eval = FALSE}
?filters
?variables
```

---

## Documentation online

---

{{< slide background-image="stable-docs.png" >}}

---

{{< slide background-image="dev-docs.png" >}}

---

{{< slide background-image="vignettes.png" >}}

---

## Working with taxa

---

### Taxa checking
```{r check-taxa}
(taxa <- finbif_check_taxa(c("Ursus arctos", "Moomin")))
```

```{r show-checked-taxa1}
taxa[[1]]
```

```{r show-checked-taxa2}
taxa[[2]]
```

---

### Taxa checking
```{r check-taxa-specific}
finbif_check_taxa(
  list(species = c("Ursus arctos", "Ursus"), genus = "Ursus")
)
```

---

### Taxa checking
```{r check-taxa-list, eval = FALSE}
taxa_list <- readLines("taxa.csv")
finbif_check_taxa(taxa_list)
```

---

## Taxa search

---

### Exact matching
```{r search-taxa}
finbif_taxa("Capreolus capreolus")
```

---

### Partial matching
```{r search-taxa-deer}
deer <- finbif_taxa("deer", type = "partial", n = 10)
sapply(deer$content, getElement, "scientificName")
```

---

## Occurrence data

---

### Requesting occurrence records
```{r occurrence}
finbif_occurrence()
```

---

### Darwin Core Variables
```{r dwc}
colnames(finbif_occurrence(dwc = TRUE))
```

---

### Choosing taxa
```{r cygnus}
finbif_occurrence("Cygnus cygnus")
```

---

### Choosing taxa
```{r cygnus2}
finbif_occurrence("Cygnus cygnus", "Cygnus olor")
```

---

### Choosing taxa
```{r birds}
birds  <- finbif_occurrence("Birds")
linnut <- finbif_occurrence("Linnut")
faglar <- finbif_occurrence("FÃ¥glar")

sapply(list(birds, linnut, faglar), nrow)
```

---

### Request size
```{r occurrences1001, eval = FALSE}
occurrences <- finbif_occurrence(n = 1001)
```

---

### Data viewer
```{r view, eval = FALSE}
View(occurrences)
```

{{< figure library="true" src="data-viewer.png" lightbox="true" class="fragment" >}}

---

{{< figure library="true" src="viewer-occurrence.png" class="stretch" >}}

---

### Suppress progress bar
```{r quiet, eval = FALSE}
finbif_occurrence(n = 1001, quiet = TRUE)
```

---

### Count records
```{r count-only}
finbif_occurrence(count_only = TRUE)
```

---

### Checking taxa
```{r moomin}
finbif_occurrence("Vulpes vulpes", "Moomin")
```

---

### Without checking
```{r moomin-check-false, eval = FALSE}
finbif_occurrence(
  "Vulpes vulpes", "Moomin", check_taxa = FALSE
)
```

---

### Failing with error
```{r moomin-check-error, error = TRUE}
finbif_occurrence(
  "Vulpes vulpes", "Moomin", on_check_fail = "error"
)
```

---

## Time & duration

---

### Compute date & time
```{r date-time-false}
finbif_occurrence(date_time = FALSE)
```

---

## Timezones

---

### Timezone input
```{r date-time-accurate, eval = FALSE}
finbif_occurrence(date_time_method = "accurate")
```

---

### Timezone output
```{r sys-tzone, eval = FALSE}
Sys.timezone()
```
```{r tzone}
finbif_occurrence(tzone = "Etc/UTC")
```

---

### Set timezone
```{r tzone-global, eval = FALSE}
options(finbif_tz = "Etc/UTC")
```

---

## Selecting & ordering variables

---

### Variables help page
```{r variables-help, eval = FALSE}
?variables
```

---

{{< slide background-image="variables-help.png" >}}

---

## Selecting variables

---

### Limiting Variables
```{r limiting}
finbif_occurrence(
  genus  = "Falco",
  select = c("scientific_name", "life_stage", "sex")
)
```

---

### Extra variables
```{r extras, eval = FALSE}
finbif_occurrence(select = c("default_vars", "life_stage"))
```

---

## Ordering

---

### Ascending order
```{r order-ascend}
finbif_occurrence("Cygnus cygnus", order_by = "abundance")
```

---

### Descending order
```{r order-descend}
finbif_occurrence("Cygnus cygnus", order_by = "-abundance")
```

---

### Multiple variables
```{r order-multiple}
finbif_occurrence(
  "Cygnus olor", order_by = c("municipality", "-abundance")
)
```

---

### Random sample
```{r random}
finbif_occurrence(sample = TRUE)
```

---

## Metadata

---

### General metadata
```{r metadata-general}
finbif_metadata()
```

---

### General metadata
```{r metadata-red-list}
finbif_metadata("red_list")
```

---

## Special metadata

---

### Informal groups
```{r informal-groups}
finbif_informal_groups(limit = 6)
```

---

### Informal groups
```{r informal-groups-crustacea}
finbif_informal_groups("Crustaceans")
```

---

### Collections
```{r collections-finland}
finbif_collections(
  filter = geographic_coverage == "Finland",
  select = 
    c("collection_name", "taxonomic_coverage", "count")
)
```

---

### Collections
```{r collections-large, eval = FALSE}
collections <- 
  finbif_collections(supercollections = TRUE, nmin = 10000)
View(collections)
```
```{r luomus-collection}
finbif_collections(
  supercollections = TRUE
)["HR.128", "collection_name"]
```

---

### Collections
```{r collections-128}
finbif_collections(
  is_part_of == "HR.128", supercollections = TRUE
)
```

---

## Filtering Occurrence Data

---

### Filtering help
```{r filters-help, eval = FALSE}
?filters
```

---

{{< slide background-image="filtering-help.png" >}}

---

## Location

---

### Places
```{r filter-place}
finbif_occurrence(filter = c(country = "Finland"))
```

---

### Coordinates
```{r filter-coords, eval = FALSE}
finbif_occurrence(
  filter = list(
    coordinates = list(
      lat = c(60, 68), lon = c(20, 30), system = "wgs84"
    )
  )
)
```

---

### Dates
```{r single-date}
finbif_occurrence(filter = c(date_range_ymd = "2019-12"))
```

---

### Dates
```{r date-range}
finbif_occurrence(
  filter = list(
    date_range_ymd = c("2019-06-01", "2019-12-31")
  )
)
```

---

### Dates
```{r every-winter, eval = FALSE}
finbif_occurrence(
  filter = list(
    date_range_md = c(begin = "12-21", end = "12-31"),
    date_range_md = c(begin = "01-01", end = "02-20")
  )
)
```

---

### Data quality
```{r quality-strict}
strict <- c(
  collection_reliability      = 5,
  coordinates_uncertainty_max = 1,
  taxon_reliability           = "reliable"
)
```
```{r quality-permissive}
permissive <- c(quality_issues = "both")
```
```{r show-quality}
c(
  strict = finbif_occurrence(
    filter = strict, count_only = TRUE
  ),
  permissive = finbif_occurrence(
    filter = permissive, count_only = TRUE
  )
)
```

---

### Collections
```{r filter-inaturalist}
finbif_occurrence(
  filter = c(collection = "iNaturalist"),
  count_only = TRUE
)
```
```{r filter-collection-object}
collections <- finbif_collections(
  filter = geographic_coverage == "Finland",
  nmin   = 10000
)
finbif_occurrence(
  filter = list(collection = collections),
  count_only = TRUE
)
```

---

### Informal groups
```{r filter-informal-group}
finbif_occurrence(
  filter = list(informal_group = "Reptiles and amphibians")
)
```

---

## Taxon status

---

### Administrative status
```{r filter-admin-status}
finbif_occurrence(
  "birds",
  filter = list(administrative_status = "EU_INVSV")
)
```

---

### Red list
```{r filter-red-list}
finbif_occurrence(
  "mammals", filter = list(red_list_status = "NT")
)
```

---

### Finnish occurrence
```{r filter-occ-status}
finbif_occurrence(
  filter = c(finnish_occurrence_status = "rare")
)
```

---

### Finnish occurrence (negation)
```{r filter-occ-status-neg, eval = FALSE}
finbif_occurrence(
  "Birds",
  filter = c(
    finnish_occurrence_status_neg = "stable",
    taxon_rank = "species"
  )
)
```

---

## Plotting

---

### Occurrence points
```{r recent-obs}
recent_obs <- finbif_occurrence(
  filter = c(country = "Finland"), n = 1000
)
```

---

### Occurrence points
```{r plot-points, fig.show = "hold", fig.keep = "last"}
plot(recent_obs)
```

---

## Occurrence density

---

### Data
```{r jays, results = "hide", message = FALSE}
jays <- finbif_occurrence(
  "Eurasian Jay",
  filter = c(
    coordinates_uncertainty_max = 100, country = "Finland"
  ),
  select = c("lon_wgs84", "lat_wgs84"),
  n = 2e4
)
```

---

### Breakpoints
```{r bbox}
finland_map$bbox
```
```{r finland-breaks}
(breaks <- breaks_xy(finland_map$bbox, size = .25))
```

---

### 2d histogram
```{r jay-density}
jay_density <- hist_xy(jays, breaks)
```

---

### Image
```{r plot-jays-image}
image(
  jay_density,
  asp    = 2.4,
  breaks = 2^seq(0, 12),
  col    = hcl.colors(12, rev = TRUE),
  xlab   = "Longitude",
  ylab   = "Latitude",
  las    = 1,
  panel.first = grid()
)
```

---

### Legend
```{r plot-jays-legend}
legend(
  "topright",
  inset  = c(0, .01),
  legend = expression(2^12, "", "", 2^6, "", "", 2^0),
  fill   = hcl.colors(7),
  border = NA,
  bty    = "n",
  adj    = c(0, 0.25),
  x.intersp = .2,
  y.intersp = .5
)
```

---

### Border
```{r plot-finland, fig.show = "hold", fig.keep = "last"}
polygon(finland_map$vertices, lwd = .2)
```

---

## Reproduciblity & Caching

---

### Reproduciblity
```{r reproducibility, eval = FALSE}
remotes::install_version("finbif", "0.2.0")
options(finbif_tz = "Europe/Helsinki")
```

---

## Caching

---

### Cache on/off
```{r without-cache, eval = FALSE}
finbif_occurrence(cache = FALSE)
```
```{r cache-off, eval = FALSE}
options(finbif_use_cache = FALSE)
```

---

### Cache on disk
```{r cache-temp, eval = FALSE}
options(finbif_cache_path = tempdir())
```
```{r create-cache, eval = FALSE}
dir.create("cache")
options(finbif_cache_path = "cache")
```

---

### Clear cache
```{r clear-cache, eval = FALSE}
finbif_clear_cache()
```

---

# FIN
